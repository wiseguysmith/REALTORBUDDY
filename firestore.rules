rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Users can only access their own user document
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Leads: Users can only access leads they own
    match /leads/{leadId} {
      allow read, write: if request.auth != null && 
        request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.userId;
    }
    
    // Message Logs: Users can only access messages for their leads
    match /messageLogs/{messageId} {
      allow read, write: if request.auth != null && 
        request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.userId;
    }
    
    // Score History: Users can only access score history for their leads
    match /scoreHistory/{scoreId} {
      allow read: if request.auth != null && 
        request.auth.uid == resource.data.userId;
      // Score history is typically written by functions, not users
      allow write: if false;
    }
    
    // Compliance Events: Users can only access compliance events for their leads
    match /complianceEvents/{eventId} {
      allow read: if request.auth != null && 
        request.auth.uid == resource.data.userId;
      // Compliance events are typically written by functions, not users
      allow write: if false;
    }
    
    // Analytics Reports: Users can only access their own reports
    match /analyticsReports/{reportId} {
      allow read: if request.auth != null && 
        request.auth.uid == resource.data.userId;
      // Analytics reports are typically written by functions, not users
      allow write: if false;
    }
    
    // Referral Logs: Users can only access referral logs for their leads
    match /referralLogs/{referralId} {
      allow read: if request.auth != null && 
        request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.userId;
    }
    
    // Health check endpoint (public read access)
    match /_health/{document} {
      allow read: if true;
      allow write: if false;
    }
    
    // Deny all other access
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
